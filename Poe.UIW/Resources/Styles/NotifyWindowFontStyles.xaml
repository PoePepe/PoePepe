<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="CustomFont">
        <Setter Property="TextElement.FontFamily" Value="/Resources/Fonts/Fontin-SmallCaps.otf #Fontin SmallCaps" />

    </Style>
    
    <Style x:Key="poeFontFamily">
        <Setter Property="TextElement.FontFamily" Value="/Resources/Fonts/Fontin-SmallCaps.otf #Fontin SmallCaps" />
        <Setter Property="Control.HorizontalAlignment"
                Value="Center" />
        <Setter Property="Control.Margin"
                Value="0,0.8,0,0.8" />

    </Style>

    <Style x:Key="poeFontSize"
           BasedOn="{StaticResource poeFontFamily}">
        <Setter Property="TextElement.FontSize" Value="14" />

    </Style>

    <!--line-->
    <Style x:Key="fadeOutLine">
        <Setter Property="Control.Margin"
                Value="0,4,0,4" />
    </Style>

    <!--itemName-->
    <Style x:Key="itemName" BasedOn="{StaticResource poeFontFamily}">
        <Setter Property="TextElement.FontSize" Value="19" />
    </Style>

    <Style x:Key="itemName_Rare" BasedOn="{StaticResource itemName}">
        <Setter Property="TextElement.Foreground" Value="#ff7" />
    </Style>
    <Style x:Key="itemName_Magic" BasedOn="{StaticResource itemName}">
        <Setter Property="TextElement.Foreground" Value="#88f" />
    </Style>
    <Style x:Key="itemName_Normal" BasedOn="{StaticResource itemName}">
        <Setter Property="TextElement.Foreground" Value="#c8c8c8" />
    </Style>
    <Style x:Key="itemName_Unique" BasedOn="{StaticResource itemName}">
        <Setter Property="TextElement.Foreground" Value="#af6025" />
    </Style>
    <Style x:Key="itemName_Gem" BasedOn="{StaticResource itemName}">
        <Setter Property="TextElement.Foreground" Value="#1ba29b" />
    </Style>
    <Style x:Key="itemName_Foil_Rainbow" BasedOn="{StaticResource itemName}">
        <Setter Property="TextElement.Foreground" Value="#82ad6a" />
    </Style>
    <Style x:Key="itemName_Foil_Default" BasedOn="{StaticResource itemName}">
        <Setter Property="TextElement.Foreground" Value="#7f7f7f" />
    </Style>
    <Style x:Key="itemName_Currency" BasedOn="{StaticResource itemName}">
        <Setter Property="TextElement.Foreground" Value="#aa9e82" />
    </Style>

    <!--enchantMods-->
    <Style x:Key="enchantMods" BasedOn="{StaticResource poeFontSize}">
        <Setter Property="TextElement.Foreground" Value="#b4b4ff" />

    </Style>

    <!--baseProperty-->
    <Style x:Key="baseProperty" BasedOn="{StaticResource poeFontSize}">
        <Setter Property="TextElement.Foreground" Value="#b4b4ff" />

    </Style>
    <Style x:Key="baseProperty_name" BasedOn="{StaticResource baseProperty}">
        <Setter Property="TextElement.Foreground" Value="#7f7f7f" />
    </Style>
    <Style x:Key="baseProperty_value" BasedOn="{StaticResource baseProperty}">
        <Setter Property="TextElement.Foreground" Value="#fff" />
        <Setter Property="Control.Margin"
                Value="5,0,0,0" />
    </Style>
    <!--mods-->
    <Style x:Key="mods"
           BasedOn="{StaticResource poeFontSize}">
        <Setter Property="TextElement.Foreground" Value="#88f" />
    </Style>
    <Style x:Key="mods_Crafted"
           BasedOn="{StaticResource poeFontSize}">
        <Setter Property="TextElement.Foreground"
                Value="#b4b4ff" />
    </Style>
    <Style x:Key="mods_Fractured"
           BasedOn="{StaticResource poeFontSize}">
        <Setter Property="TextElement.Foreground"
                Value="#a29162" />
    </Style>
    <Style x:Key="mods_Veiled"
           BasedOn="{StaticResource poeFontSize}">
        <Setter Property="TextElement.Foreground"
                Value="Transparent" />
        <Setter Property="TextElement.Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Resources/Images/veiled_mod.png" />
            </Setter.Value>
        </Setter>
    </Style>
    <!--additionalProperties-->
    <Style x:Key="additionalProperties" BasedOn="{StaticResource poeFontFamily}">
        <Setter Property="TextElement.FontSize" Value="13" />
    </Style>
    <Style x:Key="additionalProperties_name" BasedOn="{StaticResource additionalProperties}">
        <Setter Property="TextElement.Foreground" Value="#7f7f7f" />
    </Style>
    <Style x:Key="additionalProperties_value" BasedOn="{StaticResource additionalProperties}">
        <Setter Property="TextElement.Foreground" Value="#fff" />
    </Style>
    <Style x:Key="additionalProperties_aug_value" BasedOn="{StaticResource additionalProperties}">
        <Setter Property="TextElement.Foreground" Value="#88f" />
    </Style>

    <!--notableProperties-->
    <Style x:Key="notableProperties" BasedOn="{StaticResource poeFontSize}">
    </Style>
    <Style x:Key="notableProperties_title" BasedOn="{StaticResource notableProperties}">
        <Setter Property="TextElement.Foreground" Value="#88f" />
    </Style>
    <Style x:Key="notableProperties_desc" BasedOn="{StaticResource notableProperties}">
        <Setter Property="TextElement.Foreground" Value="#7f7f7f" />
    </Style>

    <!--flag-->
    <Style x:Key="flag_Corrupted" BasedOn="{StaticResource poeFontSize}">
        <Setter Property="TextElement.Foreground" Value="#d20000" />
    </Style>
    <Style x:Key="flag_Mirrored" BasedOn="{StaticResource poeFontSize}">
        <Setter Property="TextElement.Foreground" Value="#88f" />
    </Style>
    <Style x:Key="flag_Split" BasedOn="{StaticResource poeFontSize}">
        <Setter Property="TextElement.Foreground" Value="#88f" />
    </Style>
    <Style x:Key="flag_Unidentified" BasedOn="{StaticResource poeFontSize}">
        <Setter Property="TextElement.Foreground" Value="#d20000" />
    </Style>

    <!--logbook-->
    <Style x:Key="logbook" BasedOn="{StaticResource poeFontSize}">
        <Setter Property="TextElement.Foreground" Value="#b4b4ff" />
    </Style>
    <Style x:Key="logbook_area" BasedOn="{StaticResource logbook}">
        <Setter Property="TextElement.Foreground" Value="#fff" />
    </Style>
    <Style x:Key="logbook_faction" BasedOn="{StaticResource logbook}">
        <Setter Property="TextElement.Foreground" Value="#7f7f7f" />
        <Setter Property="Control.Margin"
                Value="5,0,0,0" />
    </Style>
    <Style x:Key="logbook_mod" BasedOn="{StaticResource logbook}">
        <Setter Property="TextElement.Foreground" Value="#88f" />
    </Style>

    <!--price-->
    <Style x:Key="currencyPrice"
           BasedOn="{StaticResource poeFontFamily}">
        <Setter Property="TextElement.FontSize"
                Value="18" />

        <Setter Property="TextElement.Foreground"
                Value="#a38d6d" />
    </Style>

    <!--smallNotifyText-->
    <Style x:Key="smallNotifyText"
           BasedOn="{StaticResource poeFontFamily}">
        <Setter Property="TextElement.FontSize"
                Value="18" />
        <Setter Property="TextElement.Foreground"
                Value="#e9cf9f" />

    </Style>
    <!--smallNotifyButton-->
    <Style x:Key="smallNotifyButton"
           BasedOn="{StaticResource poeFontFamily}"
           TargetType="Button">
        <Setter Property="TextElement.FontSize"
                Value="16" />
        <Setter Property="Background"
                Value="Transparent" />

        <Setter Property="Foreground"
                Value="#e9cf9f" />

        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <!--actionButtons-->
    <Style x:Key="actionButtons"
           BasedOn="{StaticResource poeFontFamily}"
           TargetType="Button">
        <Setter Property="FontSize"
                Value="15" />
        <Setter Property="Background"
                Value="#222" />
        <Setter Property="Foreground"
                Value="#e9cf9f" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Height"
                Value="auto" />
        <Setter Property="Width"
                Value="auto" />
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="Margin"
                Value="0,0,10,0" />
        <Setter Property="BorderThickness"
                Value="0.5" />
        <Setter Property="BorderBrush"
                Value="#e9cf9f" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGrid_LifeSearch -->
    <Style x:Key="DataGrid_LifeSearch" TargetType="{x:Type DataGrid}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <!-- <Setter Property="Background"> -->
        <!--     <Setter.Value> -->
        <!--         <SolidColorBrush Color="{DynamicResource ControlFillColorDefault}" /> -->
        <!--     </Setter.Value> -->
        <!-- </Setter> -->
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="Margin" Value="20" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="CanUserResizeColumns" Value="False" />
        <Setter Property="GridLinesVisibility" Value="None" />

        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="BorderBrush" Value="White"></Setter>

    </Style>

    <!-- DataGridCell_LifeSearch -->
    <Style x:Key="DataGridCell_LifeSearch" TargetType="DataGridCell">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />

        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
            </Setter.Value>
        </Setter>
        
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="15,0" />
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border HorizontalAlignment="Stretch" Padding="15 0" Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="Left"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="5 0 0 0">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <!-- DataGridColumnHeaderStyle_LifeSearch -->
    <Style x:Key="DataGridColumnHeaderStyle_LifeSearch" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0 0 0 5"></Setter>
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <!-- <Setter Property="Margin" Value="15 0 15 0"/> -->
        <Setter Property="FontSize" Value="17" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border
                            x:Name="columnHeaderBorder"
                            Padding="15,0,15,0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0,0,0.5,0">
                            <ContentPresenter
                                HorizontalAlignment="Left"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>

                        <Thumb
                            x:Name="PART_LeftHeaderGripper"
                            HorizontalAlignment="Left"
                            Style="{StaticResource ColumnHeaderGripperStyle}" />
                        <Thumb
                            x:Name="PART_RightHeaderGripper"
                            HorizontalAlignment="Right"
                            Style="{StaticResource ColumnHeaderGripperStyle}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>
    <!-- DataGridRowStyle_LifeSearch -->
    <Style x:Key="DataGridRowStyle_LifeSearch" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0 3 0 0 " />
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ControlFillColorDefault}" />
            </Setter.Value>
        </Setter>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border
                        x:Name="DGR_Border"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5"
                        SnapsToDevicePixels="True"
                        Background="{TemplateBinding Background}">
                        
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter
                                Grid.Column="1"
                                ItemsPanel="{TemplateBinding ItemsPanel}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <DataGridDetailsPresenter
                                Grid.Row="1"
                                Grid.Column="1"
                                SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                Visibility="{TemplateBinding DetailsVisibility}" />
                            <DataGridRowHeader
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="0"
                                SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>
    <!-- DataGridRowHeaderStyle_LifeSearch -->
    <Style x:Key="DataGridRowHeaderStyle_LifeSearch" TargetType="{x:Type DataGridRowHeader}">
        <!-- <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}"/> -->
        <!-- <Setter Property="Background" Value="Blue" /> -->
        <!-- -->
        <!-- <Setter Property="BorderThickness" Value="5" /> -->

    </Style>


    <Style x:Key="DataGrid_LifeSearchtesting" TargetType="{x:Type DataGrid}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ControlFillColorDefault}" />
            </Setter.Value>
        </Setter>
        <Setter Property="RowBackground" Value="Transparent" />
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="{StaticResource DefaultDataGridFontSize}" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Border.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="RowStyle" Value="{StaticResource DefaultDataGridRowStyle}" />
        <Setter Property="RowHeaderStyle" Value="{StaticResource DefaultDataGridRowHeaderStyle}" />
        <Setter Property="CellStyle" Value="{StaticResource DefaultDataGridCellStyle}" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DefaultDataGridColumnHeaderStyle}" />
        <Setter Property="DragIndicatorStyle" Value="{StaticResource DefaultDragIndicatorStyleStyle}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border
                        x:Name="border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding Border.CornerRadius}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="False">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <Button
                                            Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                            Command="{x:Static DataGrid.SelectAllCommand}"
                                            Focusable="false"
                                            Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
                                                                                          TypeInTargetAssembly={x:Type DataGrid}}}"
                                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

                                        <DataGridColumnHeadersPresenter
                                            x:Name="PART_ColumnHeadersPresenter"
                                            Grid.Row="0"
                                            Grid.Column="1"
                                            BorderThickness="5"

                                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

                                        <ScrollContentPresenter
                                            x:Name="PART_ScrollContentPresenter"
                                            Grid.Row="1"
                                            Grid.Column="0"
                                            Grid.ColumnSpan="2"
                                            CanContentScroll="{TemplateBinding CanContentScroll}" />

                                        <ScrollBar
                                            x:Name="PART_VerticalScrollBar"
                                            Grid.Row="1"
                                            Grid.Column="2"
                                            Maximum="{TemplateBinding ScrollableHeight}"
                                            Orientation="Vertical"
                                            ViewportSize="{TemplateBinding ViewportHeight}"
                                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                            Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />

                                        <Grid Grid.Row="2" Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition
                                                    Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <ScrollBar
                                                x:Name="PART_HorizontalScrollBar"
                                                Grid.Column="1"
                                                Maximum="{TemplateBinding ScrollableWidth}"
                                                Orientation="Horizontal"
                                                ViewportSize="{TemplateBinding ViewportWidth}"
                                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Panel.Background).                       (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{DynamicResource ControlLightColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="textBlock_ManageOrder" TargetType="{x:Type TextBlock}"  >
        <!-- <Setter Property="TextElement.FontFamily" Value="/Resources/Fonts/Fontin-SmallCaps.otf #Fontin SmallCaps" /> -->
      
        <Setter Property="Margin"
                Value="0" />
        <!-- <Setter Property="Foreground" Value="#808891"/> -->
    </Style>
    <!-- button LifeSearch Window -->
    <!-- testing -->
    
</ResourceDictionary>